# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'windows-latest'

name: $(TeamProject)_CIBuild_$(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

variables:
  solution: '**/*.sln'
  buildPlatform: 'x64'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    feedsToUse: config
    nugetConfigPath: NuGet.config
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'ArkBot/bin/$(buildPlatform)/$(buildConfiguration)'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildNumber).zip'
    replaceExistingArchive: true

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'mxtsdev-pat'
    repositoryName: '$(Build.Repository.Name)'
    action: 'edit'
    target: '$(Build.SourceVersion)'
    tag: 'latest-master'
    title: 'Automated Build (master)'
    releaseNotesSource: 'inline'
    releaseNotesInline: |
      This is an automated build compiled from the latest sources in the master branch.
      
      Use this if you want to try the latest features and enhancements and don't mind running a pre-release build.
    isPreRelease: true
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
    assets: '$(Build.ArtifactStagingDirectory)/*.zip'
    assetUploadMode: 'delete'